<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xd.myspringbootblog.dao.ArticleDAO">
    <resultMap id="BaseResultMap" type="com.xd.myspringbootblog.entity.ArticleDO">
        <id column="pk_article_id" jdbcType="INTEGER" property="pkArticleId" />
        <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
        <result column="article_author" jdbcType="VARCHAR" property="articleAuthor" />
        <result column="article_status" jdbcType="VARCHAR" property="articleStatus" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="read_count" jdbcType="INTEGER" property="readCount" />
        <result column="like_count" jdbcType="INTEGER" property="likeCount" />
        <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xd.myspringbootblog.entity.ArticleDO">
        <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
    </resultMap>
    <sql id="Base_Column_List">
        pk_article_id, article_title, article_author, article_status, user_id, read_count,
        like_count, comment_count, gmt_create, gmt_modified
    </sql>
    <sql id="Blob_Column_List">
        article_content
    </sql>
    <select id="getArticleByArticleId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from mb_article
        where pk_article_id = #{pkArticleId,jdbcType=INTEGER}
    </select>
    <delete id="removeArticleByArticleId" parameterType="java.lang.Integer">
        delete from mb_article
        where pk_article_id = #{pkArticleId,jdbcType=INTEGER}
    </delete>
    <insert id="saveArticle" parameterType="com.xd.myspringbootblog.entity.ArticleDO">
        insert into mb_article (pk_article_id, article_title, article_author,
        article_status, user_id, read_count,
        like_count, comment_count, gmt_create,
        gmt_modified, article_content)
        values (#{pkArticleId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, #{articleAuthor,jdbcType=VARCHAR},
        #{articleStatus,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{readCount,jdbcType=INTEGER},
        #{likeCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP},
        #{gmtModified,jdbcType=TIMESTAMP}, #{articleContent,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="saveArticleSelective" parameterType="com.xd.myspringbootblog.entity.ArticleDO">
        insert into mb_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pkArticleId != null">
                pk_article_id,
            </if>
            <if test="articleTitle != null">
                article_title,
            </if>
            <if test="articleAuthor != null">
                article_author,
            </if>
            <if test="articleStatus != null">
                article_status,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="readCount != null">
                read_count,
            </if>
            <if test="likeCount != null">
                like_count,
            </if>
            <if test="commentCount != null">
                comment_count,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="articleContent != null">
                article_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pkArticleId != null">
                #{pkArticleId,jdbcType=INTEGER},
            </if>
            <if test="articleTitle != null">
                #{articleTitle,jdbcType=VARCHAR},
            </if>
            <if test="articleAuthor != null">
                #{articleAuthor,jdbcType=VARCHAR},
            </if>
            <if test="articleStatus != null">
                #{articleStatus,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="readCount != null">
                #{readCount,jdbcType=INTEGER},
            </if>
            <if test="likeCount != null">
                #{likeCount,jdbcType=INTEGER},
            </if>
            <if test="commentCount != null">
                #{commentCount,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="articleContent != null">
                #{articleContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateArticleByArticleIdSelective" parameterType="com.xd.myspringbootblog.entity.ArticleDO">
        update mb_article
        <set>
            <if test="articleTitle != null">
                article_title = #{articleTitle,jdbcType=VARCHAR},
            </if>
            <if test="articleAuthor != null">
                article_author = #{articleAuthor,jdbcType=VARCHAR},
            </if>
            <if test="articleStatus != null">
                article_status = #{articleStatus,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="readCount != null">
                read_count = #{readCount,jdbcType=INTEGER},
            </if>
            <if test="likeCount != null">
                like_count = #{likeCount,jdbcType=INTEGER},
            </if>
            <if test="commentCount != null">
                comment_count = #{commentCount,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="articleContent != null">
                article_content = #{articleContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where pk_article_id = #{pkArticleId,jdbcType=INTEGER}
    </update>
    <update id="updateArticleByArticleIdWithBLOBs" parameterType="com.xd.myspringbootblog.entity.ArticleDO">
        update mb_article
        set article_title = #{articleTitle,jdbcType=VARCHAR},
        article_author = #{articleAuthor,jdbcType=VARCHAR},
        article_status = #{articleStatus,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=INTEGER},
        read_count = #{readCount,jdbcType=INTEGER},
        like_count = #{likeCount,jdbcType=INTEGER},
        comment_count = #{commentCount,jdbcType=INTEGER},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
        article_content = #{articleContent,jdbcType=LONGVARCHAR}
        where pk_article_id = #{pkArticleId,jdbcType=INTEGER}
    </update>
    <update id="updateArticleByArticleId" parameterType="com.xd.myspringbootblog.entity.ArticleDO">
        update mb_article
        set article_title = #{articleTitle,jdbcType=VARCHAR},
        article_author = #{articleAuthor,jdbcType=VARCHAR},
        article_status = #{articleStatus,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=INTEGER},
        read_count = #{readCount,jdbcType=INTEGER},
        like_count = #{likeCount,jdbcType=INTEGER},
        comment_count = #{commentCount,jdbcType=INTEGER},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where pk_article_id = #{pkArticleId,jdbcType=INTEGER}
    </update>
</mapper>
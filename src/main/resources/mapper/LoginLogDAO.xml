<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xd.myspringbootblog.dao.LoginLogDAO">
  <resultMap id="BaseResultMap" type="com.xd.myspringbootblog.entity.LoginLogDO">
    <id column="pk_login_log_id" jdbcType="INTEGER" property="pkLoginLogId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    pk_login_log_id, user_id, ip, login_date, gmt_create, gmt_modified
  </sql>
  <select id="getLoginLogByLoginLogId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mb_login_log
    where pk_login_log_id = #{pkLoginLogId,jdbcType=INTEGER}
  </select>
  <delete id="removeLoginLogByLoginLogId" parameterType="java.lang.Integer">
    delete from mb_login_log
    where pk_login_log_id = #{pkLoginLogId,jdbcType=INTEGER}
  </delete>
  <insert id="saveLoginLog" parameterType="com.xd.myspringbootblog.entity.LoginLogDO">
    insert into mb_login_log (pk_login_log_id, user_id, ip, 
      login_date, gmt_create, gmt_modified
      )
    values (#{pkLoginLogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, 
      #{loginDate,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="saveLoginLogSelective" parameterType="com.xd.myspringbootblog.entity.LoginLogDO">
    insert into mb_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkLoginLogId != null">
        pk_login_log_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkLoginLogId != null">
        #{pkLoginLogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByLoginLogIdSelective" parameterType="com.xd.myspringbootblog.entity.LoginLogDO">
    update mb_login_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pk_login_log_id = #{pkLoginLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByLoginLogId" parameterType="com.xd.myspringbootblog.entity.LoginLogDO">
    update mb_login_log
    set user_id = #{userId,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where pk_login_log_id = #{pkLoginLogId,jdbcType=INTEGER}
  </update>
</mapper>